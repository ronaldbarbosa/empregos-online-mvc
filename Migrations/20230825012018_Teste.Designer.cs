// <auto-generated />
using System;
using EmpregosOnLine.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmpregosOnLine.Migrations
{
    [DbContext(typeof(EmpregosOnLineDbContext))]
    [Migration("20230825012018_Teste")]
    partial class Teste
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeneficioVaga", b =>
                {
                    b.Property<Guid>("BeneficiosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VagasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BeneficiosId", "VagasId");

                    b.HasIndex("VagasId");

                    b.ToTable("VagaBeneficio", (string)null);
                });

            modelBuilder.Entity("EmpregosOnLine.Models.Beneficio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Beneficios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2fedaa00-f684-49f7-834b-0a36716f5879"),
                            Titulo = "Vale alimentação"
                        },
                        new
                        {
                            Id = new Guid("6971f74a-2ea9-4546-953e-c095a95b55c8"),
                            Titulo = "Vale refeição"
                        },
                        new
                        {
                            Id = new Guid("e5890d60-1723-4f37-97d2-e285ea27eaec"),
                            Titulo = "Gympass"
                        },
                        new
                        {
                            Id = new Guid("5d26d188-115a-4a00-adcd-5437ee955e9a"),
                            Titulo = "PLR"
                        },
                        new
                        {
                            Id = new Guid("4b3be0b2-df90-4c83-aec9-646047e1dad8"),
                            Titulo = "Vale combustível"
                        });
                });

            modelBuilder.Entity("EmpregosOnLine.Models.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("EmpregosOnLine.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("EmpregosOnLine.Models.Habilidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Habilidades");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd09c445-cff7-41bd-8d04-63356c9a64ba"),
                            Titulo = "C#"
                        },
                        new
                        {
                            Id = new Guid("b396bd5e-af52-42fe-a0b3-3c187957b76f"),
                            Titulo = "HTML"
                        },
                        new
                        {
                            Id = new Guid("34b5fe23-a463-453d-8e11-bef8348f1633"),
                            Titulo = "CSS"
                        },
                        new
                        {
                            Id = new Guid("09e54e2d-e74b-45c6-986d-9241f9e96d66"),
                            Titulo = "Javascript"
                        },
                        new
                        {
                            Id = new Guid("b5b3dfd5-aed5-415d-84b5-38299c6468ac"),
                            Titulo = "JQuery"
                        },
                        new
                        {
                            Id = new Guid("93a70675-9d40-4d9e-b5ba-e149c2d6dc97"),
                            Titulo = "Bootstrap"
                        },
                        new
                        {
                            Id = new Guid("d482548c-ea73-4e08-ae48-dfe64ca573f6"),
                            Titulo = "ASP.NET Core"
                        },
                        new
                        {
                            Id = new Guid("c78a4db7-12d2-40a8-9899-45042823f825"),
                            Titulo = "Entity Framework Core"
                        },
                        new
                        {
                            Id = new Guid("fb4fb0c1-b3ac-440b-9d97-5060a898a6cb"),
                            Titulo = "SQL Server"
                        });
                });

            modelBuilder.Entity("EmpregosOnLine.Models.Vaga", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ACombinarSalario")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("TipoContrato")
                        .HasColumnType("int");

                    b.Property<int>("TipoPerfil")
                        .HasColumnType("int");

                    b.Property<int>("TipoVaga")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("HabilidadeVaga", b =>
                {
                    b.Property<Guid>("HabilidadesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VagasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HabilidadesId", "VagasId");

                    b.HasIndex("VagasId");

                    b.ToTable("VagaHabilidade", (string)null);
                });

            modelBuilder.Entity("BeneficioVaga", b =>
                {
                    b.HasOne("EmpregosOnLine.Models.Beneficio", null)
                        .WithMany()
                        .HasForeignKey("BeneficiosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpregosOnLine.Models.Vaga", null)
                        .WithMany()
                        .HasForeignKey("VagasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmpregosOnLine.Models.Empresa", b =>
                {
                    b.HasOne("EmpregosOnLine.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("EmpregosOnLine.Models.Vaga", b =>
                {
                    b.HasOne("EmpregosOnLine.Models.Empresa", "Empresa")
                        .WithMany("Vagas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("HabilidadeVaga", b =>
                {
                    b.HasOne("EmpregosOnLine.Models.Habilidade", null)
                        .WithMany()
                        .HasForeignKey("HabilidadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpregosOnLine.Models.Vaga", null)
                        .WithMany()
                        .HasForeignKey("VagasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmpregosOnLine.Models.Empresa", b =>
                {
                    b.Navigation("Vagas");
                });
#pragma warning restore 612, 618
        }
    }
}
