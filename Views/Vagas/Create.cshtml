@using EmpregosOnLine.Models.Enums;
@model EmpregosOnLine.Models.ViewModels.VagaFormViewModel

@{
    ViewData["Title"] = "Criar Nova Vaga";
}

<h4 class="">@ViewData["Title"]</h4>
<hr />
<div class="row">
    <div class="d-flex justify-content-center">
        <form asp-action="Create" class="w-100">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="p-2 border">
                <label asp-for="Titulo" class="fs-5"></label>
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
            <div class="p-2 mt-3 border">
                <label asp-for="Descricao" class="fs-5"></label>
                <textarea asp-for="Descricao" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Descricao" class="text-danger"></span>
            </div>
            <div class="d-flex border justify-content-between p-2 mt-3">
                <div class="flex-fill mx-2">
                    <label class="fs-5">Tipo de Vaga</label>
                    @Html.DropDownListFor(model => model.TiposVaga, Enum.GetValues(typeof(TipoVaga)).Cast<TipoVaga>().Select(v =>
                    new SelectListItem
                    {
                    Text = v.ToString(),
                    Value = ((int)v).ToString()
                    }), new { @class = "form-control" })
                </div>
                <div class="flex-fill mx-2">
                    <label class="fs-5">Perfil</label>
                    @Html.DropDownListFor(model => model.TiposPerfil, Enum.GetValues(typeof(TipoPerfil)).Cast<TipoPerfil>().Select(p =>
                    new SelectListItem
                    {
                    Text = p.ToString(),
                    Value = ((int)p).ToString()
                    }), new { @class = "form-control" })
                </div>
                <div class="flex-fill mx-2">
                    <label class="fs-5">Tipo de Contrato</label>
                    @Html.DropDownListFor(model => model.TiposContrato, Enum.GetValues(typeof(TipoContrato)).Cast<TipoContrato>().Select(c =>
                    new SelectListItem
                    {
                    Text = c.ToString(),
                    Value = ((int)c).ToString()
                    }), new { @class = "form-control" })
                </div>
            </div>
            <div class="d-flex border justify-content-between p-2 mt-3">
                <div class="col-md-2 mx-2">
                    <label class="fs-5">Salário à combinar</label>
                    <select asp-for="ACombinarSalario" class="form-control">
                        <option value="true">Sim</option>
                        <option value="false">Não</option>
                    </select>
                </div>
                <div class="col-md-2 mx-2">
                    <label asp-for="Salario" class="fs-5"></label>
                    <input asp-for="Salario" class="form-control" />
                    <span asp-validation-for="Salario" class="text-danger"></span>
                </div>
                <div class="flex-fill mx-2">
                    <label class="fs-5">Empresa</label>
                    <select asp-for="EmpresaId" asp-items="@(new SelectList(Model.Empresas, "Id", "Nome"))" class="form-control"></select>
                </div>
            </div>
            <div class="d-flex my-3 p-2 flex-column border">
                <label asp-for="Habilidades" class="fs-5"></label>
                @*@Html.ListBoxFor(model => model.HabilidadesSelecionadas, 
                    new MultiSelectList(Model.Habilidades, "Id", "Titulo"),
                    new { @class = "form-control", multiple = "multiple" }
                )*@
                <div class="d-flex flex-wrap justify-content-center">
                    @foreach (var habilidade in Model.Habilidades)
                    {
                        <div class="m-2">
                            <input class="btn-check" type="checkbox"
                                   id="habilidade_@habilidade.Id"
                                   autocomplete="off"
                                   name="HabilidadesSelecionadas"
                                   value="@habilidade.Id"
                            @(Model.HabilidadesSelecionadas.Contains(habilidade) ? "checked" : "") />
                            <label class="btn btn-outline-success" for="habilidade_@habilidade.Id">
                                @habilidade.Titulo
                            </label>
                        </div>
                    }
                    <div class="d-flex align-items-center mx-2">
                        <button type="button" class="btn text-success" data-bs-toggle="modal" data-bs-target="#modalHabilidades">
                            <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                            </svg>
                        </button>
                    </div>
                    <!-- Modal -->
                    <div class="modal fade" id="modalHabilidades" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title fs-5" id="exampleModalLabel">Criar nova habilidade</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <label class="form-label">Título:</label>
                                    <input type="text" class="form-control" id="valorHabilidade" value="" />
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn bg-escuro txt-claro" data-bs-dismiss="modal">Fechar</button>
                                    <button type="button" id="valorHabilidadeBtn" class="btn bg-verde txt-claro">Criar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="d-flex my-3 p-2 flex-column border">
                <label asp-for="Beneficios" class="fs-5"></label>
                <div class="d-flex flex-wrap justify-content-center">
                    @foreach (var beneficio in Model.Beneficios)
                    {
                        <div class="m-2">
                            <input class="btn-check" type="checkbox"
                                   id="beneficio_@beneficio.Id"
                                   autocomplete="off"
                                   name="BeneficiosSelecionados"
                                   value="@beneficio.Id"
                            @(Model.BeneficiosSelecionados.Contains(beneficio) ? "checked" : "") />
                            <label class="btn btn-outline-success" for="beneficio_@beneficio.Id">
                                @beneficio.Titulo
                            </label>
                        </div>
                    }
                    <div class="d-flex align-items-center mx-2">
                        <button type="button" class="btn text-success" data-bs-toggle="modal" data-bs-target="#modalBeneficios">
                            <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                            </svg>
                        </button>
                    </div>
                    <!-- Modal -->
                    <div class="modal fade" id="modalBeneficios" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title fs-5" id="exampleModalLabel">Criar novo benefício</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <span class="form-label">Título</span>
                                    <input type="text" class="form-control" id="valorBeneficio" value="" />
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                                    <button type="button" id="valorBeneficioBtn" class="btn bg-verde txt-claro">Criar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-center">
                <a asp-action="Index" class="btn bg-escuro txt-claro mx-2">Voltar</a>
                <input type="submit" value="Criar" class="btn bg-verde txt-claro mx-2" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script src="/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $("#valorHabilidadeBtn").click(function () {
            var valorHabilidade = $("#valorHabilidade").val();
            $.ajax({
                url: "/Habilidades/CreateFromView",
                type: "POST",
                data: { habilidade: valorHabilidade },
                success: function (result) {
                    $("#modalHabilidades").modal("hide");
                    alert(result.mensagem);
                    location.reload();
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });

        $("#valorBeneficioBtn").click(function () {
            var valorBeneficio = $("#valorBeneficio").val();
            $.ajax({
                url: "/Beneficios/CreateFromView",
                type: "POST",
                data: { beneficio: valorBeneficio },
                success: function (result) {
                    $("#modalBeneficios").modal("hide");
                    alert(result.mensagem);
                    location.reload();
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });
    });
</script>
